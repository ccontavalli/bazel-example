package(default_visibility = ["//visibility:public"])

load("@npm_bazel_typescript//:index.bzl", "ts_library")
load("@npm_bazel_rollup//:index.bzl", "rollup_bundle")

# When bazel is invoked with 'bazel build directoryname' without specifying
# any target, it looks for the target 'directoryname', as if it was invoked
# like 'bazel build directoryname:directoryname'.
#
# This alias causes the 'release' target to be built when no target is explicitly
# specified by the user.
alias(
    name = "frontend",
    actual = ":release",
)

# This is the main library, with the application code.
ts_library(
    name = "app",
    srcs = ["main.tsx"],
    deps = [
        "@npm//react",
        "@npm//react-dom",
    ],
)

# Generates the file dist/bin/frontend/release.js by running rollupjs
# on all the specified dependencies, with the rollup.config.js
# configuration file.
rollup_bundle(
    name = "release",
    deps = [":app"],
    # rollup configuration file to use.
    config_file = "rollup.config.js",

    # typescript to execute once the created bundle is loaded by the browser.
    # This is necessary as the bundle will certainly contain more than one .ts/.tsx/.js
    # file, and just results in the equivalent of a 'require main' as one of the last
    # lines of the created bundle.
    entry_point = "main.tsx",
)
